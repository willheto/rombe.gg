[{"C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\index.js":"1","C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\MatchFolder.js":"2","C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\Match.js":"3","C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\Sidepanel.js":"4"},{"size":517,"mtime":1606594879793,"results":"5","hashOfConfig":"6"},{"size":9666,"mtime":1606603790499,"results":"7","hashOfConfig":"6"},{"size":1772,"mtime":1606594879794,"results":"8","hashOfConfig":"6"},{"size":2669,"mtime":1606604985499,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vc2ky3",{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\index.js",[],"C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\MatchFolder.js",["19","20","21","22","23","24"],"import React, { useState } from 'react'\r\nimport Match from './Match'\r\nimport axios from 'axios'\r\nimport './matchfolder.css'\r\nimport './Sidepanel'\r\nimport Sidepanel from './Sidepanel'\r\n\r\n\r\nconst DATATYPE_SOLOQ = 1\r\nconst DATATYPE_FLEXQ = 0\r\n\r\nconst MatchFolder = (props) => {\r\n\r\n    const champions =\r\n    {\r\n        \"1\": \"Annie\",\r\n        \"10\": \"Kayle\",\r\n        \"101\": \"Xerath\",\r\n        \"102\": \"Shyvana\",\r\n        \"103\": \"Ahri\",\r\n        \"104\": \"Graves\",\r\n        \"105\": \"Fizz\",\r\n        \"106\": \"Volibear\",\r\n        \"107\": \"Rengar\",\r\n        \"11\": \"Master Yi\",\r\n        \"110\": \"Varus\",\r\n        \"111\": \"Nautilus\",\r\n        \"112\": \"Viktor\",\r\n        \"113\": \"Sejuani\",\r\n        \"114\": \"Fiora\",\r\n        \"115\": \"Ziggs\",\r\n        \"117\": \"Lulu\",\r\n        \"119\": \"Draven\",\r\n        \"12\": \"Alistar\",\r\n        \"120\": \"Hecarim\",\r\n        \"121\": \"Kha'Zix\",\r\n        \"122\": \"Darius\",\r\n        \"126\": \"Jayce\",\r\n        \"127\": \"Lissandra\",\r\n        \"13\": \"Ryze\",\r\n        \"131\": \"Diana\",\r\n        \"133\": \"Quinn\",\r\n        \"134\": \"Syndra\",\r\n        \"136\": \"Aurelion Sol\",\r\n        \"14\": \"Sion\",\r\n        \"143\": \"Zyra\",\r\n        \"15\": \"Sivir\",\r\n        \"150\": \"Gnar\",\r\n        \"154\": \"Zac\",\r\n        \"157\": \"Yasuo\",\r\n        \"16\": \"Soraka\",\r\n        \"161\": \"Vel'Koz\",\r\n        \"163\": \"Taliyah\",\r\n        \"164\": \"Camille\",\r\n        \"17\": \"Teemo\",\r\n        \"18\": \"Tristana\",\r\n        \"19\": \"Warwick\",\r\n        \"2\": \"Olaf\",\r\n        \"20\": \"Nunu\",\r\n        \"201\": \"Braum\",\r\n        \"202\": \"Jhin\",\r\n        \"203\": \"Kindred\",\r\n        \"21\": \"Miss Fortune\",\r\n        \"22\": \"Ashe\",\r\n        \"222\": \"Jinx\",\r\n        \"223\": \"Tahm Kench\",\r\n        \"23\": \"Tryndamere\",\r\n        \"236\": \"Lucian\",\r\n        \"238\": \"Zed\",\r\n        \"24\": \"Jax\",\r\n        \"240\": \"Kled\",\r\n        \"245\": \"Ekko\",\r\n        \"25\": \"Morgana\",\r\n        \"254\": \"Vi\",\r\n        \"26\": \"Zilean\",\r\n        \"266\": \"Aatrox\",\r\n        \"267\": \"Nami\",\r\n        \"268\": \"Azir\",\r\n        \"27\": \"Singed\",\r\n        \"28\": \"Evelynn\",\r\n        \"29\": \"Twitch\",\r\n        \"3\": \"Galio\",\r\n        \"30\": \"Karthus\",\r\n        \"31\": \"Cho'Gath\",\r\n        \"32\": \"Amumu\",\r\n        \"33\": \"Rammus\",\r\n        \"34\": \"Anivia\",\r\n        \"35\": \"Shaco\",\r\n        \"36\": \"Dr. Mundo\",\r\n        \"37\": \"Sona\",\r\n        \"38\": \"Kassadin\",\r\n        \"39\": \"Irelia\",\r\n        \"4\": \"Twisted Fate\",\r\n        \"40\": \"Janna\",\r\n        \"41\": \"Gangplank\",\r\n        \"412\": \"Thresh\",\r\n        \"42\": \"Corki\",\r\n        \"420\": \"Illaoi\",\r\n        \"421\": \"Rek'Sai\",\r\n        \"427\": \"Ivern\",\r\n        \"429\": \"Kalista\",\r\n        \"43\": \"Karma\",\r\n        \"432\": \"Bard\",\r\n        \"44\": \"Taric\",\r\n        \"45\": \"Veigar\",\r\n        \"48\": \"Trundle\",\r\n        \"5\": \"Xin Zhao\",\r\n        \"50\": \"Swain\",\r\n        \"51\": \"Caitlyn\",\r\n        \"53\": \"Blitzcrank\",\r\n        \"54\": \"Malphite\",\r\n        \"55\": \"Katarina\",\r\n        \"56\": \"Nocturne\",\r\n        \"57\": \"Maokai\",\r\n        \"58\": \"Renekton\",\r\n        \"59\": \"Jarvan IV\",\r\n        \"6\": \"Urgot\",\r\n        \"60\": \"Elise\",\r\n        \"61\": \"Orianna\",\r\n        \"62\": \"Wukong\",\r\n        \"63\": \"Brand\",\r\n        \"64\": \"Lee Sin\",\r\n        \"67\": \"Vayne\",\r\n        \"68\": \"Rumble\",\r\n        \"69\": \"Cassiopeia\",\r\n        \"7\": \"LeBlanc\",\r\n        \"72\": \"Skarner\",\r\n        \"74\": \"Heimerdinger\",\r\n        \"75\": \"Nasus\",\r\n        \"76\": \"Nidalee\",\r\n        \"77\": \"Udyr\",\r\n        \"78\": \"Poppy\",\r\n        \"79\": \"Gragas\",\r\n        \"8\": \"Vladimir\",\r\n        \"80\": \"Pantheon\",\r\n        \"81\": \"Ezreal\",\r\n        \"82\": \"Mordekaiser\",\r\n        \"83\": \"Yorick\",\r\n        \"84\": \"Akali\",\r\n        \"85\": \"Kennen\",\r\n        \"86\": \"Garen\",\r\n        \"89\": \"Leona\",\r\n        \"9\": \"Fiddlesticks\",\r\n        \"90\": \"Malzahar\",\r\n        \"91\": \"Talon\",\r\n        \"92\": \"Riven\",\r\n        \"96\": \"Kog'Maw\",\r\n        \"98\": \"Shen\",\r\n        \"99\": \"Lux\"\r\n    }\r\n\r\n    const [user, setUser] = useState([])\r\n    const [matches, setMatches] = useState([])\r\n    const [matchDetails, setMatchDetails] = useState([])\r\n    const [rank, setRank] = useState([])\r\n\r\n    function checkQueueValidity(queueData) {\r\n        // check according to queuetype\r\n        if (typeof(queueData) === 'undefined') return false\r\n\r\n            return true\r\n    }\r\n\r\n    const findUser = (event) => {\r\n\r\n        event.preventDefault()\r\n        console.log(user)\r\n        axios.get('http://localhost:3001/summoneridbyname', {\r\n            headers: {\r\n                summonerName: user\r\n            }\r\n        }).then(resp => {\r\n            axios.get('http://localhost:3001/rank', {\r\n                headers: {\r\n                    summonerid: resp.data.id\r\n                }\r\n            }).then(resp => {\r\n\r\n                let type = DATATYPE_FLEXQ\r\n                let flexTier\r\n                let flexDiv\r\n                let flexLp\r\n                let soloTier\r\n                let soloDiv\r\n                let soloLp\r\n                if(checkQueueValidity(resp.data[type]))\r\n                {\r\n                    flexTier = resp.data[type].tier\r\n                    flexDiv = resp.data[type].rank\r\n                    flexLp = resp.data[type].leaguePoints\r\n                }\r\n                type = DATATYPE_SOLOQ\r\n                if(checkQueueValidity(resp.data[type]))\r\n                {\r\n                    soloTier = resp.data[type].tier\r\n                    soloDiv = resp.data[type].rank\r\n                    soloLp = resp.data[type].leaguePoints\r\n                }\r\n\r\n                setRank ({\r\n                    tier1: soloTier,\r\n                    div1: soloDiv,\r\n                    lp1: soloLp,\r\n                    tier2: flexTier,\r\n                    div2: flexDiv,\r\n                    lp2: flexLp\r\n                })\r\n\r\n            })\r\n            console.log(resp.data)\r\n            axios.get('http://localhost:3001/api/matches', {\r\n                headers: {\r\n                    summonerId: resp.data.accountId\r\n                }\r\n            }).then(resp => {\r\n\r\n                setMatches(resp.data.matches)\r\n                let gameInfo = [{}, {}, {}, {}, {}]\r\n                console.log(gameInfo)\r\n\r\n                for (let index = 0; index < 5; index++) {\r\n\r\n                    axios.get('http://localhost:3001/api/matchDetails', {\r\n                        headers: {\r\n                            matchId: resp.data.matches[index].gameId\r\n                        }\r\n                    }).then(resp => {\r\n                        console.log(resp.data)\r\n                        switch (resp.data.queueId) {\r\n                            case 440:\r\n                            gameInfo[index].gameMode = \"Ranked Flex\"\r\n                            break;\r\n                            case 400:\r\n                            gameInfo[index].gameMode = \"Draft Pick\"\r\n                            break;\r\n                            case 420:\r\n                            gameInfo[index].gameMode = \"Ranked Solo/Duo Queue\"\r\n                            break;\r\n                            case 430:\r\n                            gameInfo[index].gameMode = \"Blind Pick\"\r\n                            break;\r\n                            case 450:\r\n                            gameInfo[index].gameMode = \"ARAM\"\r\n                            break;\r\n                            default:\r\n                            gameInfo[index].gameMode = \"Ei tiedossa :D\"\r\n\r\n                        }\r\n                        resp.data.participantIdentities.map(name => {\r\n\r\n\r\n                            if (name.player.summonerName.toLowerCase() == user.toLowerCase()) {\r\n                                resp.data.participants.map(partiC => {\r\n                                    if (partiC.participantId == name.participantId) {\r\n                                        gameInfo[index].champion = champions[partiC.championId]\r\n                                        if (partiC.stats.win == true) {\r\n                                            gameInfo[index].win = \"Voitto\"\r\n                                        } else if (partiC.stats.win == false) {\r\n                                            gameInfo[index].win = \"Häviö\"\r\n                                        }\r\n                                        gameInfo[index].kills = partiC.stats.kills\r\n                                        gameInfo[index].deaths = partiC.stats.deaths\r\n                                        gameInfo[index].assists = partiC.stats.assists\r\n\r\n\r\n                                    }\r\n                                })\r\n                            }\r\n                        })\r\n                        console.log(gameInfo[index])\r\n                        gameInfo[index].id = index;\r\n                        gameInfo[index].duration = resp.data.gameDuration / 60\r\n\r\n\r\n                    }\r\n                    )\r\n                }\r\n                setMatchDetails([])\r\n                setMatchDetails(gameInfo)\r\n                setTimeout(function () { setUser(''); }, 1000);\r\n                console.log(matchDetails)\r\n\r\n            })\r\n        })\r\n}\r\n\r\nconst changeUser = (event) => {\r\n    event.preventDefault()\r\n\r\n    setUser(event.target.value)\r\n    console.log(user)\r\n}\r\n\r\nreturn (\r\n    <div>\r\n    <Sidepanel matches={matches} rank={rank}></Sidepanel>\r\n    <div class=\"matchFolder\">\r\n    <h1>Etsi käyttäjä:</h1>\r\n    <form onSubmit={findUser}>\r\n    <input value={user} onChange={changeUser}></input>\r\n    <button type=\"submit\">Etsi</button>\r\n    </form>\r\n    <h1>Match history</h1>\r\n\r\n    {matchDetails.map(match =>\r\n        <Match gameMode={match.gameMode} win={match.win} kills={match.kills} deaths={match.deaths} assists={match.assists} duration={match.duration} champion={match.champion}></Match>\r\n        )}\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n\r\n    export default MatchFolder;\r\n","C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\Match.js",["25","26","27","28","29","30","31","32"],"C:\\Users\\antto\\Documents\\rombe.gg\\rombeFrontend\\src\\matches\\Sidepanel.js",["33","34","35","36"],{"ruleId":"37","severity":1,"message":"38","line":249,"column":66,"nodeType":"39","messageId":"40","endLine":249,"endColumn":68},{"ruleId":"41","severity":1,"message":"42","line":252,"column":72,"nodeType":"43","messageId":"44","endLine":252,"endColumn":74},{"ruleId":"37","severity":1,"message":"38","line":253,"column":67,"nodeType":"39","messageId":"40","endLine":253,"endColumn":69},{"ruleId":"41","severity":1,"message":"42","line":254,"column":62,"nodeType":"43","messageId":"44","endLine":254,"endColumn":64},{"ruleId":"41","severity":1,"message":"42","line":256,"column":62,"nodeType":"43","messageId":"44","endLine":256,"endColumn":64},{"ruleId":"41","severity":1,"message":"42","line":258,"column":69,"nodeType":"43","messageId":"44","endLine":258,"endColumn":71},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"50","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":14},{"ruleId":"45","severity":1,"message":"51","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":12,"column":19,"nodeType":"43","messageId":"44","endLine":12,"endColumn":21},{"ruleId":"52","severity":1,"message":"53","line":17,"column":17,"nodeType":"54","endLine":17,"endColumn":167},{"ruleId":"41","severity":1,"message":"42","line":30,"column":26,"nodeType":"43","messageId":"44","endLine":30,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":34,"column":17,"nodeType":"54","endLine":34,"endColumn":167},{"ruleId":"45","severity":1,"message":"49","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"55","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":77,"column":13,"nodeType":"54","endLine":77,"endColumn":133},{"ruleId":"52","severity":1,"message":"53","line":81,"column":13,"nodeType":"54","endLine":81,"endColumn":133},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Twitch' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Axios' is defined but never used."]